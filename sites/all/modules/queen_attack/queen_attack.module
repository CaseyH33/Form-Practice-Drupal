<?php

function queen_attack_menu() {
  $items['queen_attack'] = array(
    'title' => 'Queen Attack',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('queen_attack_form'),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  $items['queen_attack_results_page'] = array(
    'title' => 'Results',
    'page callback' => 'queen_attack_results',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function queen_attack_form() {
  $form['queen_column'] = array(
    '#title' => 'Queen Column',
    '#type' => 'textfield',
    '#description' => t('Please input the column (a-h) of the queen'),
  );
  $form['queen_row'] = array(
    '#title' => 'Queen Row',
    '#type' => 'textfield',
    '#description' => t('Please input the row (1-8) of the queen'),
  );
  $form['attack_column'] = array(
    '#title' => 'Attacked Column',
    '#type' => 'textfield',
    '#description' => t('Please input the column (a-h) of the piece to attack'),
  );
  $form['attack_row'] = array(
    '#title' => 'Attacked Row',
    '#type' => 'textfield',
    '#description' => t('Please input the row (1-8 of the piece to attack'),
  );
  $form['submit'] = array(
      '#type' => 'submit',
      '#value' => 'Go',
    );
  return $form;
}

function queen_attack_form_submit($form, &$form_state) {
  $queen_column = strtolower($form_state['values']['queen_column']);
  $queen_row = $form_state['values']['queen_row'];
  $attack_column = strtolower($form_state['values']['attack_column']);
  $attack_row = $form_state['values']['attack_row'];

  $column_array = array(
    'a' => 1,
    'b' => 2,
    'c' => 3,
    'd' => 4,
    'e' => 5,
    'f' => 6,
    'g' => 7,
    'h' => 8,
  );

  $queen_column_value = $column_array[$queen_column];
  $attack_column_value = $column_array[$attack_column];

  if(($queen_column === $attack_column) || ($queen_row === $attack_row)) {
    $result = true;
  } elseif(abs($queen_column_value-$attack_column_value) === abs($queen_row-$attack_row)) {
    $result = true;
  } else {
    $result = false;
  }

  // for($i=$queen_column_value; $i<=8; $i++) {
  //   if($i === $attack_column_value) {
  //     if( ($queen_row+($i-$queen_column_value) === $attack_row) ||  ($queen_row-($i-$queen_column_value) === $attack_row) ) {
  //     $output = true;
  //     }
  //   }
  // }
  //
  // for($j=$queen_column_value; $j>0; $j--) {
  //   if($j === $attack_column_value) {
  //     if( ($queen_row+($queen_column_value-$j) === $attack_row) ||  ($queen_row-($queen_column_value-$j) === $attack_row) ) {
  //     $output = true;
  //     }
  //   }
  // }

  $_SESSION['queen_attack_output'] = $result;
  $form_state['redirect'] = 'queen_attack_results_page';
}

function queen_attack_results() {
  $result_display = $_SESSION['queen_attack_output'];
  if($result_display === TRUE) {
    return '<p>The queen can attack that piece!</p>';
  } else {
    return '<p>The queen cannot attack that piece!</p>';
  }
}
